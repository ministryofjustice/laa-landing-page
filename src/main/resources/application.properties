# Thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.enabled=true
spring.thymeleaf.cache=false

# =======================================
# Entra ID (Azure AD) Configuration
# =======================================

# OAuth2 Client Configuration
spring.security.oauth2.client.registration.azure.client-id=${AZURE_CLIENT_ID}
spring.security.oauth2.client.registration.azure.client-secret=${AZURE_CLIENT_SECRET}
spring.security.oauth2.client.registration.azure.tenant-id=${AZURE_TENANT_ID}
spring.security.oauth2.client.registration.azure.scope=openid, profile, email
spring.security.oauth2.client.registration.azure.redirect-uri=${BASE_URL}/login/oauth2/code/azure
spring.security.oauth2.client.registration.azure.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.azure.base-url=${BASE_URL}

# Tech Services Configuration
app.enable.tech.services.call=${TECH_SERVICES_CALLS_ENABLED:true}
app.tech.services.laa.business.unit=${TECH_SERVICES_LAA_BUSINESS_UNIT:laa}
spring.security.tech.services.credentials.base-url=${TECH_SERVICES_BASE_URL}
spring.security.tech.services.credentials.client-id=${TECH_SERVICES_AZURE_CLIENT_ID}
spring.security.tech.services.credentials.client-secret=${TECH_SERVICES_AZURE_CLIENT_SECRET}
spring.security.tech.services.credentials.scope=${TECH_SERVICES_AZURE_SCOPE}
spring.security.tech.services.credentials.tenant-id=${TECH_SERVICES_TENANT_ID}
app.tech.services.laa.verification.method=${TECH_SERVICES_VERIFICATION_METHOD:activation_code_email}
app.tech.services.req.read.timeout=${TECH_SERVICES_REQ_READ_TIMEOUT:30}
app.tech.services.req.connect.timeout=${TECH_SERVICES_REQ_CONNECT_TIMEOUT:30}

# OAuth2 Provider Configuration
spring.security.oauth2.client.provider.azure.issuer-uri=https://login.microsoftonline.com/${AZURE_TENANT_ID}/v2.0
spring.security.oauth2.client.provider.azure.token-uri=https://login.microsoftonline.com/${AZURE_TENANT_ID}/oauth2/v2.0/token
spring.security.oauth2.client.provider.azure.user-info-uri=https://graph.microsoft.com/oidc/userinfo
spring.security.oauth2.client.provider.azure.jwk-set-uri=https://login.microsoftonline.com/${AZURE_TENANT_ID}/discovery/v2.0/keys

# Resource Server Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://sts.windows.net/${AZURE_TENANT_ID}/
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://login.microsoftonline.com/${AZURE_TENANT_ID}/discovery/v2.0/keys
# This is BASE_URL without the http/https
spring.security.oauth2.resourceserver.jwt.audience=${AZURE_CLIENT_ID}

# Azure AD App Registration (for server-to-server auth)
azure.tenant-id=${AZURE_TENANT_ID}
azure.client-id=${AZURE_CLIENT_ID}
azure.client-secret=${AZURE_CLIENT_SECRET}
azure.authority=https://login.microsoftonline.com/

# Microsoft Graph API
microsoft.graph.scope=https://graph.microsoft.com/.default

# CCMS User Management API Configuration
ccms.user.management.api.base-url=${CCMS_USER_MANAGEMENT_API_BASE_URL}
ccms.user.management.api.key=${CCMS_USER_MANAGEMENT_API_KEY}

# SQS config for CCMS User API
ccms.user.api.sqs.arn=${CCMS_USER_API_SQS_ARN}

# Logging
# All logging in controlled by one variable - if we need to change these step by step
# please hardcode/introduce new env variables
logging.level.org.springframework.security=${LOG_LEVEL:INFO}
logging.level.org.springframework.web=${LOG_LEVEL:INFO}
logging.level.org.springframework.security.oauth2.jwt=${LOG_LEVEL:INFO}
logging.level.org.springframework.core.env.PropertySourcesPropertyResolver=${LOG_LEVEL:INFO}
logging.level.org.springframework.boot.actuate=WARN
logging.level.root=${LOG_LEVEL:INFO}

spring.profiles.active=${SPRING_PROFILE:local}

# Network
server.forward-headers-strategy=FRAMEWORK

# Session cookie security
server.servlet.session.cookie.same-site=lax
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true

spring.session.store-type=jdbc

# Sentry
sentry.dsn=https://d44ce4f7b634d8e905b69ceb5c180997@o345774.ingest.us.sentry.io/4509286516588544
sentry.send-default-pii=true
sentry.enabled=${SENTRY_ENABLED:true}
sentry.environment=${SENTRY_ENVIRONMENT:local}
sentry.traces-sample-rate=${SENTRY_SAMPLE_RATE:0.05}

# Turn off standard OTEL exporters - only Sentry is needed
otel.logs.exporter=none
otel.traces.exporter=none
otel.metrics.exporter=none

# Expose prometheus metrics endpoint
management.endpoints.web.exposure.include=health,prometheus

# Database
spring.datasource.url=jdbc:postgresql://${POSTGRES_DB_ADDRESS}:5432/${POSTGRES_DB_NAME}
spring.datasource.username=${POSTGRES_USERNAME}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate

# spring.datasource.url=jdbc:h2:mem./idam
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.username=laa
# spring.datasource.password=laa
#spring.jpa.hibernate.ddl-auto=create-drop

# Email Notifications
notifications.govNotifyApiKey=${GOV_NOTIFY_API_KEY:}
notifications.addNewUserEmailTemplate=a9b2f269-e1e8-4aa2-a472-d8018073f864
notifications.portalUrl=http://localhost:8080

# LAA Landing Page Apps
app.civil.apply.name=${APP_CIVIL_APPLY_NAME:Civil Apply}
app.civil.apply.details=${APP_CIVIL_APPLY_DETAILS:civil_apply_entra_oid//civil_apply_sec_group_name//civil_apply_sec_group_id}
app.civil.apply.url=${APP_CIVIL_APPLY_URL:#}
app.crime.apply.name=${APP_CRIME_APPLY_NAME:Crime Apply}
app.crime.apply.details=${APP_CRIME_APPLY_DETAILS:crime_apply_entra_oid//crime_apply_sec_group_name//crime_apply_sec_group_id}
app.crime.apply.url=${APP_CRIME_APPLY_URL:#}
app.pui.name=${APP_PUI_NAME:PUI}
app.pui.details=${APP_PUI_DETAILS:pui_entra_oid//pui_sec_group_name//pui_sec_group_id}
app.pui.url=${APP_PUI_URL:#}
app.submit.crime.form.name=${APP_SUBMIT_CRIME_FORM_NAME:Submit a Crime Form}
app.submit.crime.form.details=${APP_SUBMIT_CRIME_FORM_DETAILS:submit_crime_form_oid//submit_crime_form_sec_group_name//submit_crime_form_sec_group_id}
app.submit.crime.form.url=${APP_SUBMIT_CRIME_FORM_URL:#}
app.ccms.account.link.name=${APP_CCMS_ACCOUNT_LINK_NAME:CCMS case transfer requests}
app.ccms.account.link.details=${APP_CCMS_ACCOUNT_LINK_DETAILS:ccms_account_link_oid//ccms_account_link_sec_group_name//ccms_account_link_sec_group_id}
app.ccms.account.link.url=${APP_CCMS_ACCOUNT_LINK_URL:#}
app.laa.default.user.access.security.group=${APP_DEFAULT_USER_ACC_SEC_GROUP}

# Application details
spring.config.import=classpath:data/laa-apps-details.yml

# entra
entra.defaultDomain = mojodevlexternal.onmicrosoft.com

# Tech Services
app.tech.services.base.url=http://localhost:8080
app.tech.services.sec.group.uri=approles

# Enable DB Locking
app.enable.distributed.db.locking=${ENABLE_DISTRIBUTED_DB_LOCKING:true}
app.distributed.db.locking.period=${DISTRIBUTED_DB_LOCKING_PERIOD:15}

# Dummy data population
app.populate.dummy-data=${POPULATE_TEST_DATA:true}
app.test.admin.userPrincipals=${TEST_DATA_ADMIN_PRINCIPALS}
app.test.nonadmin.userPrincipals=${TEST_DATA_NON_ADMIN_PRINCIPALS}
app.test.internal.userPrincipals=${TEST_DATA_INTERNAL_PRINCIPALS}

# Internal user group polling
internal.user.polling.enabled=${POLLING_ENABLED:false}
internal.user.polling.interval=${POLLING_INTERVAL}
internal.user.polling.group.id=${POLLING_GROUP_ID}
internal.user.security.group.id=${INTERNAL_USER_SECURITY_GROUP}

# Caching
app.firms.clear.cache.schedule=${FIRM_CACHE_CLEAR_SCHEDULE}
app.tech.services.clear.cache.interval=${TECH_SERVICES_CLEAR_CACHE_INTERVAL:3300000}

# Feature Flags
feature.flag.enable.resend.verification.code=${FEATURE_FLAG_ENABLE_RESEND_VER_CODE:true}