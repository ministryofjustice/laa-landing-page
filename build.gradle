plugins {
    id 'uk.gov.laa.ccms.springboot.laa-ccms-spring-boot-gradle-plugin' version '0.0.32'
    id "io.sentry.jvm.gradle" version "5.5.0"
}

ext {
    set('springWebMvcVersion', "6.1.13")
    set('springDocVersion', "2.4.0")
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

checkstyle {
    toolVersion = '10.21.2'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

repositories {
    mavenCentral()
}

sentry {
  includeSourceContext = true

  org = "ministryofjustice"
  projectName = "laa-portal-stabilisation"
  authToken = System.getenv("SENTRY_AUTH_TOKEN")
}

sourceSets {
    playwrightTest {
        java {
            srcDir 'src/playwrightTest/java'
        }
        resources {
            srcDir 'src/playwrightTest/resources'
        }
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

configurations {
    playwrightImplementation.extendsFrom testImplementation
    playwrightRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.projectlombok:lombok'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'uk.gov.laa.ccms.springboot:laa-ccms-spring-boot-starter-govuk-dialect'

    // Microsoft Graph SDK dependencies
    implementation 'com.microsoft.graph:microsoft-graph:6.30.0'
    implementation 'com.microsoft.graph:microsoft-graph-core:3.6.1'

    // MSAL for authentication
    implementation 'com.microsoft.azure:msal4j:1.19.1'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // OpenAPI / Swagger Documentation
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"

    // Microsoft Graph SDK with Azure Identity
    implementation 'com.azure:azure-identity:1.16.0'
    implementation 'com.microsoft.graph:microsoft-graph:6.30.0'
    implementation 'com.microsoft.graph:microsoft-graph-core:3.6.1'

    // Azure Identity SDK for OAuth2 and token management
    implementation 'com.azure:azure-identity:1.16.0'

    implementation 'com.azure.spring:spring-cloud-azure-starter-active-directory:5.22.0'
//    implementation 'com.h2database:h2'
    implementation 'org.postgresql:postgresql'
    implementation "org.liquibase:liquibase-core"
    // UK Gov Notify dependency for email notifications
    implementation group: 'uk.gov.service.notify', name: 'notifications-java-client', version: '5.2.1-RELEASE'
    // Needed for the @Validated annotation, used when injecting properties.
    implementation 'org.hibernate.validator:hibernate-validator:8.0.2.Final'


    // Metrics
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Model mapper (used for mapping between Entities, DTOs and ViewModels
    implementation 'org.modelmapper:modelmapper:3.2.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation('org.testcontainers:postgresql')
    testImplementation('org.testcontainers:junit-jupiter')
    testImplementation('org.springframework.boot:spring-boot-testcontainers')
    testImplementation('com.microsoft.playwright:playwright:1.52.0')
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

test {
    useJUnitPlatform()
    jvmArgs "-javaagent:${configurations.testRuntimeClasspath.find { it.name.contains('mockito-core') }}", '-Xshare:off'
    finalizedBy jacocoTestReport // report is always generated after tests run
}

tasks.withType(ProcessResources).configureEach {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.register('playwrightTest', Test) {
    description = 'Runs Playwright tests.'
    group = 'verification'
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    testClassesDirs = sourceSets.playwright.output.classesDirs
    classpath = sourceSets.playwright.runtimeClasspath
}

jacocoTestReport {
    reports {
        xml.required = true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/model/**'
            ])
        })
    }
}
